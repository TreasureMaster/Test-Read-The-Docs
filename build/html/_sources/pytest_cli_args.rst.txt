Опции командной строки pytest
=============================

:--collect-only: Показывает какие тесты будут выполняться с заданными параметрами
                 и конфигурацией. Полезен для проверки правильности выбора других
                 опций, которые выбирают перед запуском тестов.

:-k EXPRESSION: Позволяет использовать выражение для определения функция тестирования.
                Используется как фильтр, выбирая тесты с определенным префиксом или
                суффиксом в названии.

:-m MARKEXPR: Помечает подмножество тестовых функций для совместного запуска.
              Маркирует тесты в коде заданным именем с помощью декоратора
              ``@pytest.mark.run_my_marker``. Теперь можно запустить тесты,
              помеченные этим маркером как ``pytest -m run_my_marker``.

.. warning:: Теперь необходимо помещать имена маркеров в файлы ``pytest.ini``
             или ``pyproject.toml``. В противном случае будут выводиться
             предупреждения. Описание создания маркеров находиться в
             документации_.
.. _документации: https://docs.pytest.org/en/stable/mark.html

:-x, --exitfirst: Прерывает тесты после первого же сбоя. Без этой опции
                  тестирование продолжится до конца.

:--maxfail=num: ``-x`` приводит к остановке тестов после первого отказа.
                ``--maxfail`` позволяет установить количество допустимых
                отказов. ``--maxfail=1`` - то же самое, что и ``-x``.

:-s и --capture=method: ``-s`` позволяет печатать операторы или любой другой вывод,
                        который обычно печатается в ``stdout``. Это включает возможность
                        печати из ``print()`` в тестах. Аналог параметра ``--capture=no``.
                        Опция ``--capture=sys`` заменяет ``sys.stdout/stderr`` в mem-файлах.
                        Опция ``--capture=fd`` указывает файловые дескрипторы 1 и 2 на
                        временный файл.

:--lf, --last-failed: После сбоя тестов выполняет только те, в которых произошел сбой.
                      Удобно после использования опции ``--tb`` для сокрытия лишней информации.

:--ff, --failed-first: Вначале выполняет то же, что и ``--last-failed``, т.е. запускает тесты,
                       в которых произошел сбой, а затем запускает все оставшиеся тесты.

:-v, --verbose: Предоставляет более развернутую информацию по итогам тестирования.

:-q, --quiet: Эта опция противоположна ``-v/--verbose``. Она сокращает объем информации в отчете.
              В сочетании с ``--tb=line`` выводит только неудавшиеся строки любых неудачных тестов.

:-l, --showlocals: Локальные переменные отображаются вместе с traceback после неудачного теста
                   со значением, которое они содержали во время неудавшегося assert.

:--tb=style: Изменяет способо вывода пакетов трассировки для сбоев. ``--tb=short`` печатает
             только строку ``assert`` и символ ``E`` без контекста. ``--tb=line`` сохраняет
             ошибку в одной строке. ``--tb=no`` полностью удаляет трассировку.
             ``--tb=long`` покажет наиболее информативный traceback.
             ``--tb=auto`` покажет наиболее информативный traceback для первого и последнего тестов,
             если есть несколько сбоев (по умолчанию).
             ``--tb=native`` покажет стандартный traceback без дополнительной информации.

:--durations=N: Сообщает самый медленный N номер тестов по окончании их прохождения.
                ``--durations=0`` сообщает обо всем по порядке от самого медленного
                к самому быстрому. Тест состоит и 3 этапов - ``call`` (вызов), ``setup`` 
                (настройка) и ``teardown`` (опровержение).

:--version: Показывает версию pytest и каталог, в который он установлен.

:-h, --help: Показывает не только помощь pytest, но и помощь всех установленных плагинов.

:--markers: Показывает доступные маркеры.

:--fixtures: Показывает доступные фикстуры.